name: Build Application Debug
on:
  push:
    branches: [ develop ]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  APP_NAME: "FriendsSecrets"

jobs:
  preparing_environment:
    runs-on: ubuntu-latest
    name: Preparing Environment
    outputs:
      jdk-version: ${{ env.JDK_VERSION }}
      gradle-opts: ${{ env.GRADLE_OPTS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5

  unit_tests:
    needs: preparing_environment
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Unit tests
        run: |
          gradle testDebugUnitTest --stacktrace
        env:
          JDK_VERSION: ${{ needs.preparing_environment.outputs.jdk-version }}
          GRADLE_OPTS: ${{ needs.preparing_environment.outputs.gradle-opts }}

  android_lint:
    needs: preparing_environment
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - if: startsWith(github.ref, 'refs/heads/master')
        name: Android Lint
        run: |
          gradle lintDebug
        env:
          JDK_VERSION: ${{ needs.preparing_environment.outputs.jdk-version }}
          GRADLE_OPTS: ${{ needs.preparing_environment.outputs.gradle-opts }}

  build:
    needs: [ preparing_environment, unit_tests, android_lint ]
    runs-on: ubuntu-latest
    name: Build
    env:
      KEYSTORE_ALIAS: ${{ secrets.ALIAS }}
      KEY_PASSWORD: ${{ secrets.PASSWORD_ALIAS }}
      KEYSTORE_PASSWORD: ${{ secrets.PASSWORD_KEY }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Extract versionName from build.gradle
        run: |
          VERSION_NAME=$(gradle -q printVersionName)
          echo "version=${VERSION_NAME}" >> $GITHUB_ENV

      - name: Get Build Date
        run: |
          echo "::set-env name=date::$(date +%Y-%m-%d)"

      - name: Build APK
        run: |
          gradle assembleDebug

      - name: Build AAB
        run: |
          gradle bundleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}-${{ env.version }}-${{ env.date }}-apk
          path: ${{ github.workspace}}/build/debug/signed/*.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}-${{ env.version }}-${{ env.date }}-aab
          path: ${{ github.workspace}}/build/debug/signed/*.aab

      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          branch: release/v${{ env.VERSION }}
          sha: '${{ github.event.pull_request.head.sha }}'
