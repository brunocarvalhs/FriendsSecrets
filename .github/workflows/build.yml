name: Build Application Debug
on:
  push:
    branches: [ develop ]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  APP_NAME: "FriendsSecrets"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_HOME }}" > local.properties
          echo "apiKey=${{ secrets.API_KEY }}" >> local.properties

      - name: Get Gradle Version from gradle.properties
        id: gradle-version
        run: |
          GRADLE_VERSION=$(grep "gradleVersion" gradle.properties | cut -d'=' -f2 | tr -d ' ')
          echo "gradle_version=${GRADLE_VERSION}" >> $GITHUB_ENV
          echo "Gradle version is $GRADLE_VERSION"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.gradle_version }}

      - name: Generate Keystore
        run: |
          keytool -genkeypair -v \
            -keystore my-release-key.jks \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -alias ${{ secrets.KEYSTORE_ALIAS }} \
            -dname "CN=My Name, OU=My Organization, O=My Company, L=My City, ST=My State, C=My Country" \
            -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
            -keypass ${{ secrets.KEY_PASSWORD }}

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build APK
        run: |
          ./gradlew assembleDebug

      - name: Build AAB
        run: |
          ./gradlew bundleDebug

      - name: Sign APK
        run: |
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=my-release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEYSTORE_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-aab
          path: app/build/outputs/bundle/release/*.aab
