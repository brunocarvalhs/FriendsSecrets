name: Android Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  APP_NAME: "FriendsSecrets"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_HOME }}" > local.properties
          echo "apiKey=${{ secrets.API_KEY }}" >> local.properties
          
      - name: Get Gradle Version from gradle.properties
        id: gradle-version
        run: |
          GRADLE_VERSION=$(grep "gradleVersion" gradle.properties | cut -d'=' -f2 | tr -d ' ')
          echo "gradle_version=${GRADLE_VERSION}" >> $GITHUB_ENV
          echo "Gradle version is $GRADLE_VERSION"
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.gradle_version }}

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        id: unit-tests
        run: ./gradlew testDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
      
      - name: Run Lint
        id: lint
        run: ./gradlew lintDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Set Labels for Unit Tests
        if: ${{ failure() }} 
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            const octokit = require('@octokit/rest')();
            octokit.pulls.update({
              owner: pullRequest.base.repo.owner.login,
              repo: pullRequest.base.repo.name,
              pull_number: pullRequest.number,
              labels: ['tests: failed']  // Adiciona a label de falha
            });

      - name: Set Labels for Lint
        if: ${{ steps.lint.outcome == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            const octokit = require('@octokit/rest')();
            octokit.pulls.update({
              owner: pullRequest.base.repo.owner.login,
              repo: pullRequest.base.repo.name,
              pull_number: pullRequest.number,
              labels: ['lint: failed']  // Adiciona a label de falha
            });

      - name: Set Success Labels
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            const octokit = require('@octokit/rest')();
            octokit.pulls.update({
              owner: pullRequest.base.repo.owner.login,
              repo: pullRequest.base.repo.name,
              pull_number: pullRequest.number,
              labels: ['tests: success', 'lint: success', 'ready for merge']  // Adiciona as labels de sucesso
            });
